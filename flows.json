[
    {
        "id": "d2076010266e691e",
        "type": "tab",
        "label": "Alex",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "58d29239db35f478",
        "type": "tab",
        "label": "Tristan",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "23feec37c6c261df",
        "type": "tab",
        "label": "Sensoren",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "22f91514a3ba7ab9",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.178.160",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "421e6af122eb7d8d",
        "type": "mqtt-broker",
        "name": "Seeblick",
        "broker": "192.168.178.131",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "98a6cce324aeb5e3",
        "type": "socketcan-config",
        "interface": "can0"
    },
    {
        "id": "bc2d5e9c5511daf0",
        "type": "mqtt-broker",
        "name": "Lokal",
        "broker": "raspberrypi.local",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "72f295af932710c5",
        "type": "mqtt out",
        "z": "d2076010266e691e",
        "name": "",
        "topic": "MowRo",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "bc2d5e9c5511daf0",
        "x": 600,
        "y": 240,
        "wires": []
    },
    {
        "id": "cea5bf1a3215d8c6",
        "type": "mqtt in",
        "z": "d2076010266e691e",
        "name": "",
        "topic": "MowRo",
        "qos": "2",
        "datatype": "utf8",
        "broker": "bc2d5e9c5511daf0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 770,
        "y": 240,
        "wires": [
            [
                "ddd20385d637b753"
            ]
        ]
    },
    {
        "id": "37e1475948c27166",
        "type": "inject",
        "z": "d2076010266e691e",
        "name": "Forward",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Mode\":\"Forward\",\"Speed\":9,\"Angle\":0,\"Radius\":0}",
        "payloadType": "json",
        "x": 120,
        "y": 300,
        "wires": [
            [
                "72f295af932710c5"
            ]
        ]
    },
    {
        "id": "f1dd287a4485b272",
        "type": "json",
        "z": "d2076010266e691e",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 1510,
        "y": 260,
        "wires": [
            [
                "ff7ffd42f8a0c80a"
            ]
        ]
    },
    {
        "id": "bdd8a0509a42a633",
        "type": "buffer-maker",
        "z": "d2076010266e691e",
        "name": "",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "Mode",
                "type": "uint8",
                "length": 1,
                "dataType": "msg",
                "data": "payload.binMode"
            },
            {
                "name": "Speed",
                "type": "uint8",
                "length": 1,
                "dataType": "msg",
                "data": "payload.Speed"
            },
            {
                "name": "ShiftAngle",
                "type": "uint8",
                "length": 1,
                "dataType": "msg",
                "data": "payload.ShiftAngle"
            },
            {
                "name": "Angle",
                "type": "uint8",
                "length": 1,
                "dataType": "msg",
                "data": "payload.Angle"
            },
            {
                "name": "Radius",
                "type": "uint8",
                "length": 1,
                "dataType": "msg",
                "data": "payload.Radius"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload.data",
        "msgPropertyType": "str",
        "x": 2770,
        "y": 220,
        "wires": [
            [
                "78f81452ce40e35b"
            ]
        ]
    },
    {
        "id": "282614a17b9b693f",
        "type": "mqtt in",
        "z": "d2076010266e691e",
        "name": "",
        "topic": "NewerFeedback",
        "qos": "2",
        "datatype": "auto",
        "broker": "bc2d5e9c5511daf0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 820,
        "wires": [
            [
                "cc029c6b5bf83e99"
            ]
        ]
    },
    {
        "id": "ff7ffd42f8a0c80a",
        "type": "function",
        "z": "d2076010266e691e",
        "name": "switchMode",
        "func": "switch (msg.payload.Mode)\n{\ncase \"Stop\":\n    \n    msg.payload.binMode=0b11111111\n    return msg;\n    \ncase \"Forward\":\n\n    msg.payload.binMode=0b00000001\n    return msg;  \n    \ncase \"Backward\":\n\n     msg.payload.binMode=0b00000010\n    return msg; \n\ncase \"RightTurnForward\":\n\n     msg.payload.binMode=0b00000011\n    return msg;\n    \ncase \"RightTurnBackward\":\n\n      msg.payload.binMode=0b00000100\n    return msg;\n    \ncase \"LeftTurnForward\":\n\n    msg.payload.binMode=0b00000101\n    return msg;\n    \ncase \"LeftTurnBackward\":\n\n     msg.payload.binMode=0b00000110\n    return msg;\n    \ncase \"ClockwiseRotation\":\n\n    msg.payload.binMode=0b00000111\n    return msg;\n    \ncase \"CounterClockwiseRotation\":\n\n    msg.payload.binMode=0b00001000\n    return msg;\n\ndefault:\n    msg.payload = \"105: Mode nicht definiert\"\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 260,
        "wires": [
            [
                "0fac06133517bace"
            ]
        ]
    },
    {
        "id": "ead899817251434e",
        "type": "function",
        "z": "d2076010266e691e",
        "name": "calculateSpeed",
        "func": "// Convert Speed from km/h in cm/s max. value 9.14\nmsg.payload.Speed=Math.round(msg.payload.Speed*1000/36)\nif (msg.payload.Speed > 255)\n{\n    msg.payload.Speed = 255\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2060,
        "y": 240,
        "wires": [
            [
                "5f62c78599bf213b"
            ]
        ]
    },
    {
        "id": "e1259c18c1151d14",
        "type": "inject",
        "z": "d2076010266e691e",
        "name": "Backward",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Mode\":\"Backward\",\"Speed\":0,\"Angle\":0,\"Radius\":0}",
        "payloadType": "json",
        "x": 120,
        "y": 360,
        "wires": [
            [
                "72f295af932710c5"
            ]
        ]
    },
    {
        "id": "67f4151c435f8917",
        "type": "inject",
        "z": "d2076010266e691e",
        "name": "RightTurnForward",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Mode\":\"RightTurnForward\",\"Speed\":6.85697,\"Angle\":20,\"Radius\":1.25848}",
        "payloadType": "json",
        "x": 150,
        "y": 420,
        "wires": [
            [
                "72f295af932710c5"
            ]
        ]
    },
    {
        "id": "dc1371fec7cf2538",
        "type": "inject",
        "z": "d2076010266e691e",
        "name": "RightTurnBackward",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Mode\":\"RightTurnBackward\",\"Speed\":0,\"Angle\":0,\"Radius\":0}",
        "payloadType": "json",
        "x": 150,
        "y": 480,
        "wires": [
            [
                "72f295af932710c5"
            ]
        ]
    },
    {
        "id": "9c8af845381ef642",
        "type": "inject",
        "z": "d2076010266e691e",
        "name": "LeftTurnForward",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Mode\":\"LeftTurnForward\",\"Speed\":4.87945,\"Angle\":150,\"Radius\":3}",
        "payloadType": "json",
        "x": 140,
        "y": 540,
        "wires": [
            [
                "72f295af932710c5"
            ]
        ]
    },
    {
        "id": "844e45e3164ce50c",
        "type": "inject",
        "z": "d2076010266e691e",
        "name": "LeftTurnBackward",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Mode\":\"LeftTurnBackward\",\"Speed\":0,\"Angle\":0,\"Radius\":0}",
        "payloadType": "json",
        "x": 150,
        "y": 600,
        "wires": [
            [
                "72f295af932710c5"
            ]
        ]
    },
    {
        "id": "69b04c470b8770dc",
        "type": "inject",
        "z": "d2076010266e691e",
        "name": "ClockwiseRotation",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Mode\":\"ClockwiseRotation\",\"Speed\":0,\"Angle\":0,\"Radius\":0}",
        "payloadType": "json",
        "x": 150,
        "y": 660,
        "wires": [
            [
                "72f295af932710c5"
            ]
        ]
    },
    {
        "id": "cdebb0984fbb19c2",
        "type": "inject",
        "z": "d2076010266e691e",
        "name": "CounterClockwiseRotation",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Mode\":\"CounterClockwiseRotation\",\"Speed\":0,\"Angle\":0,\"Radius\":0}",
        "payloadType": "json",
        "x": 170,
        "y": 720,
        "wires": [
            [
                "72f295af932710c5"
            ]
        ]
    },
    {
        "id": "dccdbedfba9fefc3",
        "type": "inject",
        "z": "d2076010266e691e",
        "name": "Stop",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payload": "{\"Mode\":\"Stop\",\"Speed\":0,\"Angle\":0,\"Radius\":0}",
        "payloadType": "json",
        "x": 110,
        "y": 240,
        "wires": [
            [
                "72f295af932710c5"
            ]
        ]
    },
    {
        "id": "5f62c78599bf213b",
        "type": "function",
        "z": "d2076010266e691e",
        "name": "Angle",
        "func": "if (msg.payload.Angle > 360)\n{\n    msg.payload = \"106: Winkel darf maximal 360 Grad gross sein\"\n}\nelse if (361 > msg.payload.Angle > 255)\n{\n    msg.payload.ShiftAngle = 1\n    msg.payload.Angle = msg.payload.Angle-256\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2210,
        "y": 240,
        "wires": [
            [
                "3aeee01204342351"
            ]
        ]
    },
    {
        "id": "3833bd0a23d1ad42",
        "type": "function",
        "z": "d2076010266e691e",
        "name": "calculateRadius",
        "func": "//convert radius from m to cm, max. value = 2.55m\n\nmsg.payload.Radius = Math.round(msg.payload.Radius*100)\n\nif(msg.payload.Radius > 255)\n{\n    msg.payload.Radius = 255\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2600,
        "y": 220,
        "wires": [
            [
                "bdd8a0509a42a633"
            ]
        ]
    },
    {
        "id": "78f81452ce40e35b",
        "type": "function",
        "z": "d2076010266e691e",
        "name": "receiveDriveData",
        "func": "msg.payload=\n{\n    \"canfd\":false,\n    \"ext\":false,\n    \"rtr\":false,\n    \"canid\":11,\n    \"dlc\":5,\n    \"data\":[msg.payload.data[0],msg.payload.data[1],msg.payload.data[2],msg.payload.data[3],msg.payload.data[4]]\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2950,
        "y": 220,
        "wires": [
            [
                "ca33282c2dc2a957",
                "64abc52502efb7d2"
            ]
        ]
    },
    {
        "id": "0fac06133517bace",
        "type": "switch",
        "z": "d2076010266e691e",
        "name": "ErrorHandling_Mode",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "105: Mode nicht definiert",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "105: Mode nicht definiert",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1840,
        "y": 260,
        "wires": [
            [
                "ead899817251434e"
            ],
            [
                "2053b05bf69140f8"
            ]
        ]
    },
    {
        "id": "2053b05bf69140f8",
        "type": "mqtt out",
        "z": "d2076010266e691e",
        "name": "",
        "topic": "NewerFeedback",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "bc2d5e9c5511daf0",
        "x": 2060,
        "y": 280,
        "wires": []
    },
    {
        "id": "f59ed71297a77f76",
        "type": "inject",
        "z": "d2076010266e691e",
        "name": "ErrorTest_Mode",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"Mode\":\"Stop\",\"Speed\":0,\"Angle\":\"w\",\"Radius\":2}",
        "payloadType": "json",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "72f295af932710c5"
            ]
        ]
    },
    {
        "id": "cc029c6b5bf83e99",
        "type": "debug",
        "z": "d2076010266e691e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 820,
        "wires": []
    },
    {
        "id": "3aeee01204342351",
        "type": "switch",
        "z": "d2076010266e691e",
        "name": "ErrorHandling_Angle",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "106: Winkel darf maximal 360 Grad gross sein",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "106: Winkel darf maximal 360 Grad gross sein",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2380,
        "y": 240,
        "wires": [
            [
                "3833bd0a23d1ad42"
            ],
            [
                "7b1d39b3bc82d727"
            ]
        ]
    },
    {
        "id": "7b1d39b3bc82d727",
        "type": "mqtt out",
        "z": "d2076010266e691e",
        "name": "",
        "topic": "NewerFeedback",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "bc2d5e9c5511daf0",
        "x": 2600,
        "y": 260,
        "wires": []
    },
    {
        "id": "8258439bf7759f91",
        "type": "switch",
        "z": "d2076010266e691e",
        "name": "ErrorHandling_Syntax",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "10",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1240,
        "y": 240,
        "wires": [
            [
                "96a2328dc4d58d28"
            ],
            [
                "f1dd287a4485b272"
            ]
        ]
    },
    {
        "id": "96a2328dc4d58d28",
        "type": "mqtt out",
        "z": "d2076010266e691e",
        "name": "",
        "topic": "NewerFeedback",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "bc2d5e9c5511daf0",
        "x": 1540,
        "y": 180,
        "wires": []
    },
    {
        "id": "ddd20385d637b753",
        "type": "function",
        "z": "d2076010266e691e",
        "name": "ErrorHandling_Syntax_Code",
        "func": "Mode = (msg.payload.indexOf(\"\\\"Mode\\\":\"));\nSpeed = (msg.payload.indexOf(\",\\\"Speed\\\":\"))\nAngle = (msg.payload.indexOf(\",\\\"Angle\\\":\"));\nRadius = (msg.payload.indexOf(\",\\\"Radius\\\":\"));\n\nif ((Mode==-1) || (Speed==-1) || (Angle==-1) ||(Radius==-1) )\n{\n    msg.payload = \"101: \\\"Mode\\\" || \\\"Speed\\\" || \\\"Angle\\\" || \\\"Radius\\\" malformed or not included\"\n    return msg\n}\n\nfor (i = Speed + 9 ; i < Angle; i++) \n{\n   \n   if (isNaN(msg.payload[i]) == true)\n   {\n        if(msg.payload[i] != \".\")\n        {\n            msg.payload = \"102: Wert von Speed ist NaN\"\n            return msg\n        }\n   }\n    \n}\n\nfor (i = Angle + 9 ; i < Radius; i++) \n{\n   \n   if (isNaN(msg.payload[i]) == true)\n   {\n        if(msg.payload[i] != \".\")\n        {\n            msg.payload = \"103: Wert von Angle ist NaN\"\n            return msg\n        }\n   }\n    \n}\n\nfor (i = Radius + 10 ; i < msg.payload.length-1; i++) \n{\n   \n   if (isNaN(msg.payload[i]) == true)\n   {\n        if(msg.payload[i] != \".\")\n        {\n            msg.payload = \"104: Wert von Radius ist NaN\"\n            return msg\n        }\n   }\n    \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 240,
        "wires": [
            [
                "8258439bf7759f91"
            ]
        ]
    },
    {
        "id": "ca33282c2dc2a957",
        "type": "function",
        "z": "d2076010266e691e",
        "name": "",
        "func": "flow.set(\"InputMode\", msg.payload.data[0])\nflow.set(\"InputSpeed\", msg.payload.data[1])\nflow.set(\"InputShiftedAngle\", msg.payload.data[2])\nflow.set(\"InputAngle\", msg.payload.data[3])\nflow.set(\"InputRadius\", msg.payload.data[4])\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3180,
        "y": 60,
        "wires": [
            [
                "a52bb468f67e201e"
            ]
        ]
    },
    {
        "id": "3de04da96d491c54",
        "type": "function",
        "z": "d2076010266e691e",
        "name": "FilterCANID_11_FillBuffer",
        "func": "if (msg.payload.canid == 11)\n{\n    flow.set(\"FeedbackDriveMode\", msg.payload.data[0])\n    flow.set(\"FeedbackDriveSpeed\", msg.payload.data[1])\n    flow.set(\"FeedbackDriveShiftedAngle\", msg.payload.data[2])\n    flow.set(\"FeedbackDriveAngle\", msg.payload.data[3])\n    flow.set(\"FeedbackDriveRadius\", msg.payload.data[4])\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4070,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "a52bb468f67e201e",
        "type": "delay",
        "z": "d2076010266e691e",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3400,
        "y": 60,
        "wires": [
            [
                "54ea0e52e20c55a1"
            ]
        ]
    },
    {
        "id": "7ab94a45d27316ae",
        "type": "mqtt out",
        "z": "d2076010266e691e",
        "name": "",
        "topic": "NewerFeedback",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "bc2d5e9c5511daf0",
        "x": 4840,
        "y": 60,
        "wires": []
    },
    {
        "id": "54ea0e52e20c55a1",
        "type": "function",
        "z": "d2076010266e691e",
        "name": "",
        "func": "if(flow.get(\"FeedbackDriveMode\") != flow.get(\"InputMode\"))\n{\n    msg.payload = \"205: Zurueckgegebener DriveMode != geforderter DriveMode\"\n    return msg;\n}\nif(flow.get(\"FeedbackDriveSpeed\") != flow.get(\"InputSpeed\"))\n{\n    msg.payload = \"202: Zurueckgegebener Speed != geforderter Speed\"\n    return msg;\n}\nif(flow.get(\"FeedbackDriveShiftedAngle\") != flow.get(\"InputShiftedAngle\") || flow.get(\"FeedbackDriveAngle\") != flow.get(\"InputAngle\"))\n{\n    msg.payload = \"203: Zurueckgegebener Angle != geforderter Angle\"\n    return msg;\n}\nif(flow.get(\"FeedbackDriveRadius\") != flow.get(\"InputRadius\"))\n{\n    msg.payload = \"204: Zurueckgegebener Radius != geforderter Radius\"\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3620,
        "y": 60,
        "wires": [
            [
                "7ab94a45d27316ae"
            ]
        ]
    },
    {
        "id": "2e7f87854b4a0a1d",
        "type": "function",
        "z": "d2076010266e691e",
        "name": "FilterCANID_11",
        "func": "if (msg.payload.canid == 11)\n{\n    msg.payload = msg.payload.data.toString()\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4580,
        "y": 280,
        "wires": [
            [
                "d4a7adb7e534dc6d"
            ]
        ]
    },
    {
        "id": "d4a7adb7e534dc6d",
        "type": "mqtt out",
        "z": "d2076010266e691e",
        "name": "",
        "topic": "NewerDriveData",
        "qos": "2",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "bc2d5e9c5511daf0",
        "x": 4840,
        "y": 280,
        "wires": []
    },
    {
        "id": "24342c0c0535f846",
        "type": "mqtt in",
        "z": "d2076010266e691e",
        "name": "",
        "topic": "NewerDriveData",
        "qos": "2",
        "datatype": "auto",
        "broker": "bc2d5e9c5511daf0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 880,
        "wires": [
            [
                "cc029c6b5bf83e99"
            ]
        ]
    },
    {
        "id": "7b6728d4f1334eed",
        "type": "function",
        "z": "d2076010266e691e",
        "name": "switchMode",
        "func": "if(msg.payload.canid == 11)\n{\n    switch (msg.payload.data[0])\n    {\n    case 0b11111111:\n        \n        msg.payload.data[0]=\"Stop\"\n        return msg;\n        \n    case 0b00000001:\n    \n        msg.payload.data[0]=\"Forward\"\n        return msg;  \n        \n    case 0b00000010:\n    \n         msg.payload.data[0]=\"Backward\"\n        return msg; \n    \n    case 0b00000011:\n    \n         msg.payload.data[0]=\"RightTurnForward\"\n        return msg;\n        \n    case 0b00000100:\n    \n          msg.payload.data[0]=\"RightTurnBackward\"\n        return msg;\n        \n    case 0b00000101:\n    \n        msg.payload.data[0]=\"LeftTurnForward\"\n        return msg;\n        \n    case 0b00000110:\n    \n         msg.payload.data[0]=\"LeftTurnBackward\"\n        return msg;\n        \n    case 0b00000111:\n    \n        msg.payload.data[0]=\"ClockwiseRotation\"\n        return msg;\n        \n    case 0b00001000:\n    \n        msg.payload.data[0]=\"CounterClockwiseRotation\"\n        return msg;\n    \n    default:\n        msg.payload = \"201: Modeumwandlung fehlgeschlagen. Zurueckgegebener Wert vom Bus: \" + msg.payload.data[0]\n        return msg;\n    }\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3830,
        "y": 280,
        "wires": [
            [
                "2995a3808fb432c2"
            ]
        ]
    },
    {
        "id": "2995a3808fb432c2",
        "type": "function",
        "z": "d2076010266e691e",
        "name": "calculateSpeed",
        "func": "// Convert Speed from cm/s in km/h\nmsg.payload.data[1]=msg.payload.data[1]*36/1000\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4020,
        "y": 280,
        "wires": [
            [
                "f78ccbbfc550b969"
            ]
        ]
    },
    {
        "id": "f78ccbbfc550b969",
        "type": "function",
        "z": "d2076010266e691e",
        "name": "Angle",
        "func": "msg.payload.data[2] = msg.payload.data[2] + msg.payload.data[3]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4190,
        "y": 280,
        "wires": [
            [
                "d0f1c5059cea80a5"
            ]
        ]
    },
    {
        "id": "d0f1c5059cea80a5",
        "type": "function",
        "z": "d2076010266e691e",
        "name": "calculateRadius",
        "func": "//convert radius from cm to m\n\nmsg.payload.data[3] = msg.payload.data[4]/100\nmsg.payload.data.pop()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4360,
        "y": 280,
        "wires": [
            [
                "2e7f87854b4a0a1d"
            ]
        ]
    },
    {
        "id": "64abc52502efb7d2",
        "type": "socketcan-in",
        "z": "d2076010266e691e",
        "name": "socketcan-in",
        "config": "98a6cce324aeb5e3",
        "x": 3190,
        "y": 220,
        "wires": []
    },
    {
        "id": "654cb07db4907665",
        "type": "socketcan-out",
        "z": "d2076010266e691e",
        "name": "socketcan-out",
        "config": "98a6cce324aeb5e3",
        "x": 3570,
        "y": 280,
        "wires": [
            [
                "7b6728d4f1334eed"
            ]
        ]
    },
    {
        "id": "bb96c6e8a8a2cb7b",
        "type": "inject",
        "z": "d2076010266e691e",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "{     \"canfd\":false,     \"ext\":false,     \"rtr\":false,     \"canid\":11,     \"dlc\":5,     \"data\":[255,0,0,0,0]}",
        "payloadType": "jsonata",
        "x": 3710,
        "y": 120,
        "wires": [
            [
                "3de04da96d491c54"
            ]
        ]
    },
    {
        "id": "bb25fe38e662adcf",
        "type": "config",
        "z": "d2076010266e691e",
        "name": "Cache",
        "properties": [
            {
                "p": "FeedbackDriveMode",
                "pt": "flow",
                "to": "1",
                "tot": "num"
            },
            {
                "p": "InputMode",
                "pt": "flow",
                "to": "1",
                "tot": "num"
            },
            {
                "p": "FeedbackDriveSpeed",
                "pt": "flow",
                "to": "1",
                "tot": "num"
            },
            {
                "p": "InputSpeed",
                "pt": "flow",
                "to": "1",
                "tot": "num"
            },
            {
                "p": "FeedbackDriveShiftedAngle",
                "pt": "flow",
                "to": "1",
                "tot": "num"
            },
            {
                "p": "InputAngle",
                "pt": "flow",
                "to": "1",
                "tot": "num"
            },
            {
                "p": "FeedbackDriveAngle",
                "pt": "flow",
                "to": "1",
                "tot": "num"
            },
            {
                "p": "InputRadius",
                "pt": "flow",
                "to": "1",
                "tot": "num"
            },
            {
                "p": "FeedbackDriveRadius",
                "pt": "flow",
                "to": "1",
                "tot": "num"
            }
        ],
        "active": true,
        "x": 110,
        "y": 120,
        "wires": []
    },
    {
        "id": "dae292152ab6791d",
        "type": "mqtt in",
        "z": "d2076010266e691e",
        "name": "",
        "topic": "Custom",
        "qos": "2",
        "datatype": "utf8",
        "broker": "bc2d5e9c5511daf0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 770,
        "y": 360,
        "wires": [
            [
                "e7eeb05950da4f7d"
            ]
        ]
    },
    {
        "id": "e7eeb05950da4f7d",
        "type": "function",
        "z": "d2076010266e691e",
        "name": "CreatingCustomMessage",
        "func": "msg.payload = msg.payload.split(',').map(Number);\nmsg.payload.data = [0,0,0,0,0,0,0]\nmsg.payload.data.length = msg.payload.length - 1\nvar i;\nfor (i = 1; i < msg.payload.length; i++)\n{\n      msg.payload.data[i-1] = msg.payload[i];\n}\nmsg.payload=\n{\n    \"canfd\":false,\n    \"ext\":false,\n    \"rtr\":false,\n    \"canid\":msg.payload[0],\n    \"dlc\":msg.payload.data.length,\n    \"data\":msg.payload.data\n}\nreturn msg\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 360,
        "wires": [
            [
                "2e5b81e8d543afa3"
            ]
        ]
    },
    {
        "id": "2e5b81e8d543afa3",
        "type": "socketcan-in",
        "z": "d2076010266e691e",
        "name": "socketcan-in",
        "config": "98a6cce324aeb5e3",
        "x": 1230,
        "y": 360,
        "wires": []
    },
    {
        "id": "fd95d9bea6c1c27c",
        "type": "mqtt in",
        "z": "d2076010266e691e",
        "name": "",
        "topic": "Modi",
        "qos": "0",
        "datatype": "utf8",
        "broker": "bc2d5e9c5511daf0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 770,
        "y": 480,
        "wires": [
            [
                "f82be0d4713b5d46"
            ]
        ]
    },
    {
        "id": "f82be0d4713b5d46",
        "type": "function",
        "z": "d2076010266e691e",
        "name": "CreatingModiMessage",
        "func": "msg.payload = msg.payload.split(',').map(Number);\nvar i = 0;\nif (msg.payload.length != 3)\n{\n    msg.payload = \"107: Nachricht hat nicht genau 3 Nutzdaten\";\n    return msg\n}\nfor(i = 0;i<msg.payload.length;i++)\n{\n    if(msg.payload[i] != 0)\n    {\n        if (msg.payload[i] != 1)\n        {\n            msg.payload = \"108: Nutzdaten sind nicht 0 oder 1\"\n            return msg\n        }\n    }\n}\n\n\nmsg.payload=\n{\n    \"canfd\":false,\n    \"ext\":false,\n    \"rtr\":false,\n    \"canid\":0,\n    \"dlc\":3,\n    \"data\":msg.payload\n}\nreturn msg\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 480,
        "wires": [
            [
                "eb2b86e8a466eec5"
            ]
        ]
    },
    {
        "id": "cf2b39310c5a4b5c",
        "type": "socketcan-in",
        "z": "d2076010266e691e",
        "name": "socketcan-in",
        "config": "98a6cce324aeb5e3",
        "x": 1450,
        "y": 500,
        "wires": []
    },
    {
        "id": "d4dae3b41949a5d7",
        "type": "mqtt out",
        "z": "d2076010266e691e",
        "name": "",
        "topic": "NewerFeedback",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "bc2d5e9c5511daf0",
        "x": 1460,
        "y": 440,
        "wires": []
    },
    {
        "id": "eb2b86e8a466eec5",
        "type": "switch",
        "z": "d2076010266e691e",
        "name": "ErrorHandling_Syntax",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "10",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1220,
        "y": 480,
        "wires": [
            [
                "d4dae3b41949a5d7"
            ],
            [
                "cf2b39310c5a4b5c"
            ]
        ]
    },
    {
        "id": "7a6ee82c5172bf43",
        "type": "inject",
        "z": "58d29239db35f478",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "6848bbddd77340d5"
            ]
        ]
    },
    {
        "id": "6580f3eb06b185f9",
        "type": "debug",
        "z": "58d29239db35f478",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1770,
        "y": 60,
        "wires": []
    },
    {
        "id": "6848bbddd77340d5",
        "type": "function",
        "z": "58d29239db35f478",
        "name": "",
        "func": "msg.payload=\n{\n    \"canfd\":false,\n    \"ext\":false,\n    \"rtr\":false,\n    \"canid\":4,\n    \"dlc\":5,\n    \"data\":[1,2,3,4,5]\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "f9f2cf3f875d0823",
        "type": "buffer-maker",
        "z": "58d29239db35f478",
        "name": "CanID-Filter",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "item1",
                "type": "uint8",
                "length": 1,
                "dataType": "msg",
                "data": "payload.canid"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "x": 1350,
        "y": 60,
        "wires": [
            [
                "6580f3eb06b185f9"
            ]
        ]
    },
    {
        "id": "037d420644049e8f",
        "type": "buffer-maker",
        "z": "58d29239db35f478",
        "name": "Can_Data",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "item1",
                "type": "uint8",
                "length": 5,
                "dataType": "msg",
                "data": "payload.data"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "x": 1340,
        "y": 120,
        "wires": [
            [
                "6580f3eb06b185f9"
            ]
        ]
    },
    {
        "id": "1522fe0eb22014be",
        "type": "inject",
        "z": "58d29239db35f478",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "e05f1b8c31bca3e0",
        "type": "inject",
        "z": "58d29239db35f478",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "4341aedc55b58e8c",
        "type": "function",
        "z": "58d29239db35f478",
        "name": "",
        "func": "if (msg.payload.canid == (4 || 5 || 6))\n{\n   return msg; \n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 60,
        "wires": [
            [
                "f9f2cf3f875d0823",
                "037d420644049e8f"
            ]
        ]
    },
    {
        "id": "77fb12d7cd70bb36",
        "type": "function",
        "z": "23feec37c6c261df",
        "name": "CAN-ID-9-Filter",
        "func": "if(msg.payload.canid == 9)\n{\n    msg.payload = msg.payload.data\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 160,
        "wires": [
            [
                "28ead4a8a5871023"
            ]
        ]
    },
    {
        "id": "28ead4a8a5871023",
        "type": "mqtt out",
        "z": "23feec37c6c261df",
        "name": "Distance_Rear",
        "topic": "Distance_Rear",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "bc2d5e9c5511daf0",
        "x": 620,
        "y": 160,
        "wires": []
    },
    {
        "id": "21caad40d5def8d9",
        "type": "mqtt in",
        "z": "23feec37c6c261df",
        "name": "SensorData",
        "topic": "Distance_Rear",
        "qos": "0",
        "datatype": "auto",
        "broker": "bc2d5e9c5511daf0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 910,
        "y": 40,
        "wires": [
            [
                "2234d3dd67d9d56b"
            ]
        ]
    },
    {
        "id": "2234d3dd67d9d56b",
        "type": "debug",
        "z": "23feec37c6c261df",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 40,
        "wires": []
    },
    {
        "id": "7d91ae6179051815",
        "type": "function",
        "z": "23feec37c6c261df",
        "name": "receiveDriveData",
        "func": "msg.payload=\n{\n    \"canfd\":false,\n    \"ext\":false,\n    \"rtr\":false,\n    \"canid\":9,\n    \"dlc\":5,\n    \"data\":[0,1,0]\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 400,
        "wires": [
            [
                "53a57fb91b03381e"
            ]
        ]
    },
    {
        "id": "c77c5884bd8cec5a",
        "type": "inject",
        "z": "23feec37c6c261df",
        "name": "Stop",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 170,
        "y": 400,
        "wires": [
            [
                "7d91ae6179051815"
            ]
        ]
    },
    {
        "id": "5e7e6078afb7da54",
        "type": "function",
        "z": "23feec37c6c261df",
        "name": "receiveDriveData",
        "func": "msg.payload=\n{\n    \"canfd\":false,\n    \"ext\":false,\n    \"rtr\":false,\n    \"canid\":10,\n    \"dlc\":5,\n    \"data\":[msg.payload.data[0],msg.payload.data[1],msg.payload.data[2]]\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 500,
        "wires": [
            [
                "72b130581e712c6b"
            ]
        ]
    },
    {
        "id": "4ba63cd3637c1fed",
        "type": "buffer-maker",
        "z": "23feec37c6c261df",
        "name": "",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "name": "humidity",
                "type": "uint8",
                "length": 1,
                "dataType": "msg",
                "data": "payload.humidity"
            },
            {
                "name": "temperature",
                "type": "int8",
                "length": 1,
                "dataType": "msg",
                "data": "payload.temperature"
            },
            {
                "name": "rain",
                "type": "byte",
                "length": 1,
                "dataType": "msg",
                "data": "payload.rain"
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload.data",
        "msgPropertyType": "str",
        "x": 490,
        "y": 500,
        "wires": [
            [
                "5e7e6078afb7da54"
            ]
        ]
    },
    {
        "id": "2bd9cc6fd95c014c",
        "type": "inject",
        "z": "23feec37c6c261df",
        "name": "Umweltdaten",
        "props": [
            {
                "p": "payload.humidity",
                "v": "60",
                "vt": "num"
            },
            {
                "p": "payload.temperature",
                "v": "20",
                "vt": "num"
            },
            {
                "p": "payload.rain",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "x": 150,
        "y": 500,
        "wires": [
            [
                "4ba63cd3637c1fed"
            ]
        ]
    },
    {
        "id": "4d7c2ce9dc864e0b",
        "type": "socketcan-out",
        "z": "23feec37c6c261df",
        "name": "socketcan-out",
        "config": "98a6cce324aeb5e3",
        "x": 90,
        "y": 40,
        "wires": [
            [
                "77fb12d7cd70bb36",
                "d101c4734c6d808f",
                "f354dcf4807408c7",
                "e360947d4eece2e7"
            ]
        ]
    },
    {
        "id": "53a57fb91b03381e",
        "type": "socketcan-in",
        "z": "23feec37c6c261df",
        "name": "socketcan-in",
        "config": "98a6cce324aeb5e3",
        "x": 690,
        "y": 400,
        "wires": []
    },
    {
        "id": "72b130581e712c6b",
        "type": "socketcan-in",
        "z": "23feec37c6c261df",
        "name": "socketcan-in",
        "config": "98a6cce324aeb5e3",
        "x": 1130,
        "y": 500,
        "wires": []
    },
    {
        "id": "d101c4734c6d808f",
        "type": "function",
        "z": "23feec37c6c261df",
        "name": "CAN-ID-10-Filter",
        "func": "if(msg.payload.canid == 10)\n{\n    msg.payload = msg.payload.data\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 220,
        "wires": [
            [
                "ab19eef5e9fa4d10"
            ]
        ]
    },
    {
        "id": "ab19eef5e9fa4d10",
        "type": "mqtt out",
        "z": "23feec37c6c261df",
        "name": "Environmental_Data",
        "topic": "Environmental_Data",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "bc2d5e9c5511daf0",
        "x": 640,
        "y": 220,
        "wires": []
    },
    {
        "id": "e360947d4eece2e7",
        "type": "function",
        "z": "23feec37c6c261df",
        "name": "CAN-ID-8-Filter",
        "func": "if(msg.payload.canid == 8)\n{\n    msg.payload = msg.payload.data\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 100,
        "wires": [
            [
                "c828208ef9600893"
            ]
        ]
    },
    {
        "id": "f354dcf4807408c7",
        "type": "function",
        "z": "23feec37c6c261df",
        "name": "CAN-ID-7-Filter",
        "func": "if(msg.payload.canid == 7)\n{\n    msg.payload = msg.payload.data\n    return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 40,
        "wires": [
            [
                "b13c1c51a1819006"
            ]
        ]
    },
    {
        "id": "b13c1c51a1819006",
        "type": "mqtt out",
        "z": "23feec37c6c261df",
        "name": "Impact_Front",
        "topic": "Impact_Front",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "bc2d5e9c5511daf0",
        "x": 610,
        "y": 40,
        "wires": []
    },
    {
        "id": "c828208ef9600893",
        "type": "mqtt out",
        "z": "23feec37c6c261df",
        "name": "Impact_Back",
        "topic": "Impact_Back",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "bc2d5e9c5511daf0",
        "x": 610,
        "y": 100,
        "wires": []
    }
]